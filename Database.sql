--------------------------------------------------------
-- DANIEL MENDOZA CARO - ING. INFORMATICA
--------------------------------------------------------
--------------------------------------------------------
--  DDL for Sequence CUENTACLT
--------------------------------------------------------

   CREATE SEQUENCE  "BANCODANIEL"."CUENTACLT"  MINVALUE 1 MAXVALUE 100000 INCREMENT BY 1 START WITH 42 CACHE 10 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence DEPOSITOCLT
--------------------------------------------------------

   CREATE SEQUENCE  "BANCODANIEL"."DEPOSITOCLT"  MINVALUE 1 MAXVALUE 100000 INCREMENT BY 1 START WITH 62 CACHE 10 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence GIROCLT
--------------------------------------------------------

   CREATE SEQUENCE  "BANCODANIEL"."GIROCLT"  MINVALUE 1 MAXVALUE 100000 INCREMENT BY 1 START WITH 52 CACHE 10 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence SALDOCLT
--------------------------------------------------------

   CREATE SEQUENCE  "BANCODANIEL"."SALDOCLT"  MINVALUE 1 MAXVALUE 100000 INCREMENT BY 1 START WITH 73 CACHE 10 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence TRASPASOCLT
--------------------------------------------------------

   CREATE SEQUENCE  "BANCODANIEL"."TRASPASOCLT"  MINVALUE 1 MAXVALUE 100000 INCREMENT BY 1 START WITH 1 CACHE 10 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Table CLIENTE
--------------------------------------------------------

  CREATE TABLE "BANCODANIEL"."CLIENTE" 
   (	"RUT_CLT" VARCHAR2(10 BYTE), 
	"NOMBRE" VARCHAR2(30 BYTE), 
	"APELLIDO" VARCHAR2(40 BYTE), 
	"DIRECCION" VARCHAR2(40 BYTE), 
	"TELEFONO" VARCHAR2(12 BYTE), 
	"EMAIL" VARCHAR2(50 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "BANCO_FINAL" ;
--------------------------------------------------------
--  DDL for Table CUENTA_CLT
--------------------------------------------------------

  CREATE TABLE "BANCODANIEL"."CUENTA_CLT" 
   (	"NUM_CUENTA" VARCHAR2(30 BYTE), 
	"RUT_CLIENTE" VARCHAR2(10 BYTE), 
	"MONTO" NUMBER(*,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "BANCO_FINAL" ;
--------------------------------------------------------
--  DDL for Table DEPOSITO
--------------------------------------------------------

  CREATE TABLE "BANCODANIEL"."DEPOSITO" 
   (	"COD_DEPOSITO" VARCHAR2(30 BYTE), 
	"NUM_CUENTA" VARCHAR2(30 BYTE), 
	"MONTO_DEPOSITO" NUMBER(*,0), 
	"FECHA_DEPOSITO" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "BANCO_FINAL" ;
--------------------------------------------------------
--  DDL for Table GIRO
--------------------------------------------------------

  CREATE TABLE "BANCODANIEL"."GIRO" 
   (	"COD_GIRO" VARCHAR2(30 BYTE), 
	"NUM_CUENTA" VARCHAR2(30 BYTE), 
	"MONTO_GIRO" NUMBER(*,0), 
	"FECHA_GIRO" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "BANCO_FINAL" ;
--------------------------------------------------------
--  DDL for Table SALDO_ANT
--------------------------------------------------------

  CREATE TABLE "BANCODANIEL"."SALDO_ANT" 
   (	"COD_TRANSACCION" VARCHAR2(30 BYTE), 
	"NUM_CUENTA" VARCHAR2(30 BYTE), 
	"TIPO_TRANSACCION" VARCHAR2(20 BYTE), 
	"MONTO" NUMBER(*,0), 
	"MONTO_INICIAL" NUMBER(*,0), 
	"MONTO_FINAL" NUMBER(*,0), 
	"FECHA_TRANSACCION" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "BANCO_FINAL" ;
--------------------------------------------------------
--  DDL for Table TRASPASO
--------------------------------------------------------

  CREATE TABLE "BANCODANIEL"."TRASPASO" 
   (	"COD_TRASPASO" VARCHAR2(30 BYTE), 
	"NUM_CUENTA_ORIGEN" VARCHAR2(30 BYTE), 
	"NUM_CUENTA_DESTINO" VARCHAR2(30 BYTE), 
	"MONTO_TRASPASO" VARCHAR2(30 BYTE), 
	"FECHA_TRASPASO" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "BANCO_FINAL" ;
REM INSERTING into BANCODANIEL.CLIENTE
SET DEFINE OFF;
Insert into BANCODANIEL.CLIENTE (RUT_CLT,NOMBRE,APELLIDO,DIRECCION,TELEFONO,EMAIL) values ('10000000-0','cliente2','apellido2','casa #1212','123123123','correo.cl');
Insert into BANCODANIEL.CLIENTE (RUT_CLT,NOMBRE,APELLIDO,DIRECCION,TELEFONO,EMAIL) values ('19038598-1','Cliente1','Apellido1','Pasaje San Guido #1213','56783455','correo@correo.cl');
Insert into BANCODANIEL.CLIENTE (RUT_CLT,NOMBRE,APELLIDO,DIRECCION,TELEFONO,EMAIL) values ('18882070-0','Daniel','Mendoza','SAN RAMON','72963773','correo@correo.com');
Insert into BANCODANIEL.CLIENTE (RUT_CLT,NOMBRE,APELLIDO,DIRECCION,TELEFONO,EMAIL) values ('11318833-2','Franco','Machuca','SAN MIGUEL','6229267','franco@gmail.com');
REM INSERTING into BANCODANIEL.CUENTA_CLT
SET DEFINE OFF;
Insert into BANCODANIEL.CUENTA_CLT (NUM_CUENTA,RUT_CLIENTE,MONTO) values ('CLT31','10000000-0','40000');
Insert into BANCODANIEL.CUENTA_CLT (NUM_CUENTA,RUT_CLIENTE,MONTO) values ('CLT11','19038598-1','39000');
Insert into BANCODANIEL.CUENTA_CLT (NUM_CUENTA,RUT_CLIENTE,MONTO) values ('CLT1','18882070-0','139450');
Insert into BANCODANIEL.CUENTA_CLT (NUM_CUENTA,RUT_CLIENTE,MONTO) values ('CLT2','11318833-2','0');
REM INSERTING into BANCODANIEL.DEPOSITO
SET DEFINE OFF;
Insert into BANCODANIEL.DEPOSITO (COD_DEPOSITO,NUM_CUENTA,MONTO_DEPOSITO,FECHA_DEPOSITO) values ('DEP5','CLT2','200',to_date('11/16/16','MM/DD/RR'));
Insert into BANCODANIEL.DEPOSITO (COD_DEPOSITO,NUM_CUENTA,MONTO_DEPOSITO,FECHA_DEPOSITO) values ('DEP6','CLT1','200',to_date('11/16/16','MM/DD/RR'));
Insert into BANCODANIEL.DEPOSITO (COD_DEPOSITO,NUM_CUENTA,MONTO_DEPOSITO,FECHA_DEPOSITO) values ('DEP31','CLT1','30000',to_date('11/18/16','MM/DD/RR'));
Insert into BANCODANIEL.DEPOSITO (COD_DEPOSITO,NUM_CUENTA,MONTO_DEPOSITO,FECHA_DEPOSITO) values ('DEP41','CLT1','550',to_date('11/27/16','MM/DD/RR'));
Insert into BANCODANIEL.DEPOSITO (COD_DEPOSITO,NUM_CUENTA,MONTO_DEPOSITO,FECHA_DEPOSITO) values ('DEP23','CLT11','2000',to_date('11/17/16','MM/DD/RR'));
Insert into BANCODANIEL.DEPOSITO (COD_DEPOSITO,NUM_CUENTA,MONTO_DEPOSITO,FECHA_DEPOSITO) values ('DEP52','CLT2','2000',to_date('11/28/16','MM/DD/RR'));
Insert into BANCODANIEL.DEPOSITO (COD_DEPOSITO,NUM_CUENTA,MONTO_DEPOSITO,FECHA_DEPOSITO) values ('DEP53','CLT1','100000',to_date('11/28/16','MM/DD/RR'));
Insert into BANCODANIEL.DEPOSITO (COD_DEPOSITO,NUM_CUENTA,MONTO_DEPOSITO,FECHA_DEPOSITO) values ('DEP11','CLT1','2000',to_date('11/17/16','MM/DD/RR'));
Insert into BANCODANIEL.DEPOSITO (COD_DEPOSITO,NUM_CUENTA,MONTO_DEPOSITO,FECHA_DEPOSITO) values ('DEP12','CLT2','1000',to_date('11/17/16','MM/DD/RR'));
Insert into BANCODANIEL.DEPOSITO (COD_DEPOSITO,NUM_CUENTA,MONTO_DEPOSITO,FECHA_DEPOSITO) values ('DEP21','CLT1','2000',to_date('11/17/16','MM/DD/RR'));
Insert into BANCODANIEL.DEPOSITO (COD_DEPOSITO,NUM_CUENTA,MONTO_DEPOSITO,FECHA_DEPOSITO) values ('DEP7','CLT1','2000',to_date('11/16/16','MM/DD/RR'));
Insert into BANCODANIEL.DEPOSITO (COD_DEPOSITO,NUM_CUENTA,MONTO_DEPOSITO,FECHA_DEPOSITO) values ('DEP22','CLT1','2000',to_date('11/17/16','MM/DD/RR'));
Insert into BANCODANIEL.DEPOSITO (COD_DEPOSITO,NUM_CUENTA,MONTO_DEPOSITO,FECHA_DEPOSITO) values ('DEP51','CLT2','1000',to_date('11/28/16','MM/DD/RR'));
Insert into BANCODANIEL.DEPOSITO (COD_DEPOSITO,NUM_CUENTA,MONTO_DEPOSITO,FECHA_DEPOSITO) values ('DEP1','CLT1','12',to_date('11/16/16','MM/DD/RR'));
Insert into BANCODANIEL.DEPOSITO (COD_DEPOSITO,NUM_CUENTA,MONTO_DEPOSITO,FECHA_DEPOSITO) values ('DEP2','CLT1','5',to_date('11/16/16','MM/DD/RR'));
Insert into BANCODANIEL.DEPOSITO (COD_DEPOSITO,NUM_CUENTA,MONTO_DEPOSITO,FECHA_DEPOSITO) values ('DEP3','CLT1','2000',to_date('11/16/16','MM/DD/RR'));
Insert into BANCODANIEL.DEPOSITO (COD_DEPOSITO,NUM_CUENTA,MONTO_DEPOSITO,FECHA_DEPOSITO) values ('DEP4','CLT1','2000',to_date('11/16/16','MM/DD/RR'));
Insert into BANCODANIEL.DEPOSITO (COD_DEPOSITO,NUM_CUENTA,MONTO_DEPOSITO,FECHA_DEPOSITO) values ('DEP8','CLT1','2000',to_date('11/16/16','MM/DD/RR'));
Insert into BANCODANIEL.DEPOSITO (COD_DEPOSITO,NUM_CUENTA,MONTO_DEPOSITO,FECHA_DEPOSITO) values ('DEP42','CLT2','100',to_date('11/28/16','MM/DD/RR'));
REM INSERTING into BANCODANIEL.GIRO
SET DEFINE OFF;
Insert into BANCODANIEL.GIRO (COD_GIRO,NUM_CUENTA,MONTO_GIRO,FECHA_GIRO) values ('GIR4','CLT1','200',to_date('11/16/16','MM/DD/RR'));
Insert into BANCODANIEL.GIRO (COD_GIRO,NUM_CUENTA,MONTO_GIRO,FECHA_GIRO) values ('GIR41','CLT1','1000',to_date('11/28/16','MM/DD/RR'));
Insert into BANCODANIEL.GIRO (COD_GIRO,NUM_CUENTA,MONTO_GIRO,FECHA_GIRO) values ('GIR21','CLT11','3000',to_date('11/17/16','MM/DD/RR'));
Insert into BANCODANIEL.GIRO (COD_GIRO,NUM_CUENTA,MONTO_GIRO,FECHA_GIRO) values ('GIR11','CLT1','3000',to_date('11/17/16','MM/DD/RR'));
Insert into BANCODANIEL.GIRO (COD_GIRO,NUM_CUENTA,MONTO_GIRO,FECHA_GIRO) values ('GIR12','CLT1','1000',to_date('11/17/16','MM/DD/RR'));
Insert into BANCODANIEL.GIRO (COD_GIRO,NUM_CUENTA,MONTO_GIRO,FECHA_GIRO) values ('GIR42','CLT2','12100',to_date('11/28/16','MM/DD/RR'));
Insert into BANCODANIEL.GIRO (COD_GIRO,NUM_CUENTA,MONTO_GIRO,FECHA_GIRO) values ('GIR2','CLT1','2000',to_date('11/16/16','MM/DD/RR'));
Insert into BANCODANIEL.GIRO (COD_GIRO,NUM_CUENTA,MONTO_GIRO,FECHA_GIRO) values ('GIR3','CLT2','200',to_date('11/16/16','MM/DD/RR'));
Insert into BANCODANIEL.GIRO (COD_GIRO,NUM_CUENTA,MONTO_GIRO,FECHA_GIRO) values ('GIR1','CLT1','17',to_date('11/16/16','MM/DD/RR'));
Insert into BANCODANIEL.GIRO (COD_GIRO,NUM_CUENTA,MONTO_GIRO,FECHA_GIRO) values ('GIR31','CLT1','100',to_date('11/28/16','MM/DD/RR'));
REM INSERTING into BANCODANIEL.SALDO_ANT
SET DEFINE OFF;
Insert into BANCODANIEL.SALDO_ANT (COD_TRANSACCION,NUM_CUENTA,TIPO_TRANSACCION,MONTO,MONTO_INICIAL,MONTO_FINAL,FECHA_TRANSACCION) values ('REG8','CLT2','DEPOSITO','200','7800','8000',to_date('11/16/16','MM/DD/RR'));
Insert into BANCODANIEL.SALDO_ANT (COD_TRANSACCION,NUM_CUENTA,TIPO_TRANSACCION,MONTO,MONTO_INICIAL,MONTO_FINAL,FECHA_TRANSACCION) values ('REG9','CLT1','GIRO','200','4000','3800',to_date('11/16/16','MM/DD/RR'));
Insert into BANCODANIEL.SALDO_ANT (COD_TRANSACCION,NUM_CUENTA,TIPO_TRANSACCION,MONTO,MONTO_INICIAL,MONTO_FINAL,FECHA_TRANSACCION) values ('REG10','CLT1','DEPOSITO','200','3800','4000',to_date('11/16/16','MM/DD/RR'));
Insert into BANCODANIEL.SALDO_ANT (COD_TRANSACCION,NUM_CUENTA,TIPO_TRANSACCION,MONTO,MONTO_INICIAL,MONTO_FINAL,FECHA_TRANSACCION) values ('REG41','CLT1','DEPOSITO','30000','10000','40000',to_date('11/18/16','MM/DD/RR'));
Insert into BANCODANIEL.SALDO_ANT (COD_TRANSACCION,NUM_CUENTA,TIPO_TRANSACCION,MONTO,MONTO_INICIAL,MONTO_FINAL,FECHA_TRANSACCION) values ('REG51','CLT1','DEPOSITO','550','40000','40550',to_date('11/27/16','MM/DD/RR'));
Insert into BANCODANIEL.SALDO_ANT (COD_TRANSACCION,NUM_CUENTA,TIPO_TRANSACCION,MONTO,MONTO_INICIAL,MONTO_FINAL,FECHA_TRANSACCION) values ('REG62','CLT1','GIRO','1000','40450','39450',to_date('11/28/16','MM/DD/RR'));
Insert into BANCODANIEL.SALDO_ANT (COD_TRANSACCION,NUM_CUENTA,TIPO_TRANSACCION,MONTO,MONTO_INICIAL,MONTO_FINAL,FECHA_TRANSACCION) values ('REG33','CLT11','GIRO','3000','40000','37000',to_date('11/17/16','MM/DD/RR'));
Insert into BANCODANIEL.SALDO_ANT (COD_TRANSACCION,NUM_CUENTA,TIPO_TRANSACCION,MONTO,MONTO_INICIAL,MONTO_FINAL,FECHA_TRANSACCION) values ('REG34','CLT11','DEPOSITO','2000','37000','39000',to_date('11/17/16','MM/DD/RR'));
Insert into BANCODANIEL.SALDO_ANT (COD_TRANSACCION,NUM_CUENTA,TIPO_TRANSACCION,MONTO,MONTO_INICIAL,MONTO_FINAL,FECHA_TRANSACCION) values ('REG63','CLT2','DEPOSITO','2000','10100','12100',to_date('11/28/16','MM/DD/RR'));
Insert into BANCODANIEL.SALDO_ANT (COD_TRANSACCION,NUM_CUENTA,TIPO_TRANSACCION,MONTO,MONTO_INICIAL,MONTO_FINAL,FECHA_TRANSACCION) values ('REG65','CLT1','DEPOSITO','100000','39450','139450',to_date('11/28/16','MM/DD/RR'));
Insert into BANCODANIEL.SALDO_ANT (COD_TRANSACCION,NUM_CUENTA,TIPO_TRANSACCION,MONTO,MONTO_INICIAL,MONTO_FINAL,FECHA_TRANSACCION) values ('REG21','CLT1','GIRO','3000','8000','5000',to_date('11/17/16','MM/DD/RR'));
Insert into BANCODANIEL.SALDO_ANT (COD_TRANSACCION,NUM_CUENTA,TIPO_TRANSACCION,MONTO,MONTO_INICIAL,MONTO_FINAL,FECHA_TRANSACCION) values ('REG22','CLT1','DEPOSITO','2000','5000','7000',to_date('11/17/16','MM/DD/RR'));
Insert into BANCODANIEL.SALDO_ANT (COD_TRANSACCION,NUM_CUENTA,TIPO_TRANSACCION,MONTO,MONTO_INICIAL,MONTO_FINAL,FECHA_TRANSACCION) values ('REG23','CLT2','DEPOSITO','1000','8000','9000',to_date('11/17/16','MM/DD/RR'));
Insert into BANCODANIEL.SALDO_ANT (COD_TRANSACCION,NUM_CUENTA,TIPO_TRANSACCION,MONTO,MONTO_INICIAL,MONTO_FINAL,FECHA_TRANSACCION) values ('REG24','CLT1','GIRO','1000','7000','6000',to_date('11/17/16','MM/DD/RR'));
Insert into BANCODANIEL.SALDO_ANT (COD_TRANSACCION,NUM_CUENTA,TIPO_TRANSACCION,MONTO,MONTO_INICIAL,MONTO_FINAL,FECHA_TRANSACCION) values ('REG31','CLT1','DEPOSITO','2000','6000','8000',to_date('11/17/16','MM/DD/RR'));
Insert into BANCODANIEL.SALDO_ANT (COD_TRANSACCION,NUM_CUENTA,TIPO_TRANSACCION,MONTO,MONTO_INICIAL,MONTO_FINAL,FECHA_TRANSACCION) values ('REG64','CLT2','GIRO','12100','12100','0',to_date('11/28/16','MM/DD/RR'));
Insert into BANCODANIEL.SALDO_ANT (COD_TRANSACCION,NUM_CUENTA,TIPO_TRANSACCION,MONTO,MONTO_INICIAL,MONTO_FINAL,FECHA_TRANSACCION) values ('REG5','CLT1','GIRO','2000','4000','2000',to_date('11/16/16','MM/DD/RR'));
Insert into BANCODANIEL.SALDO_ANT (COD_TRANSACCION,NUM_CUENTA,TIPO_TRANSACCION,MONTO,MONTO_INICIAL,MONTO_FINAL,FECHA_TRANSACCION) values ('REG7','CLT2','GIRO','200','8000','7800',to_date('11/16/16','MM/DD/RR'));
Insert into BANCODANIEL.SALDO_ANT (COD_TRANSACCION,NUM_CUENTA,TIPO_TRANSACCION,MONTO,MONTO_INICIAL,MONTO_FINAL,FECHA_TRANSACCION) values ('REG11','CLT1','DEPOSITO','2000','4000','6000',to_date('11/16/16','MM/DD/RR'));
Insert into BANCODANIEL.SALDO_ANT (COD_TRANSACCION,NUM_CUENTA,TIPO_TRANSACCION,MONTO,MONTO_INICIAL,MONTO_FINAL,FECHA_TRANSACCION) values ('REG32','CLT1','DEPOSITO','2000','8000','10000',to_date('11/17/16','MM/DD/RR'));
Insert into BANCODANIEL.SALDO_ANT (COD_TRANSACCION,NUM_CUENTA,TIPO_TRANSACCION,MONTO,MONTO_INICIAL,MONTO_FINAL,FECHA_TRANSACCION) values ('REG61','CLT2','DEPOSITO','1000','9100','10100',to_date('11/28/16','MM/DD/RR'));
Insert into BANCODANIEL.SALDO_ANT (COD_TRANSACCION,NUM_CUENTA,TIPO_TRANSACCION,MONTO,MONTO_INICIAL,MONTO_FINAL,FECHA_TRANSACCION) values ('REG1','CLT1','DEPOSITO','12','2000','2012',to_date('11/16/16','MM/DD/RR'));
Insert into BANCODANIEL.SALDO_ANT (COD_TRANSACCION,NUM_CUENTA,TIPO_TRANSACCION,MONTO,MONTO_INICIAL,MONTO_FINAL,FECHA_TRANSACCION) values ('REG2','CLT1','DEPOSITO','5','2012','2017',to_date('11/16/16','MM/DD/RR'));
Insert into BANCODANIEL.SALDO_ANT (COD_TRANSACCION,NUM_CUENTA,TIPO_TRANSACCION,MONTO,MONTO_INICIAL,MONTO_FINAL,FECHA_TRANSACCION) values ('REG3','CLT1','DEPOSITO','2000','2017','4017',to_date('11/16/16','MM/DD/RR'));
Insert into BANCODANIEL.SALDO_ANT (COD_TRANSACCION,NUM_CUENTA,TIPO_TRANSACCION,MONTO,MONTO_INICIAL,MONTO_FINAL,FECHA_TRANSACCION) values ('REG4','CLT1','GIRO','17','4017','4000',to_date('11/16/16','MM/DD/RR'));
Insert into BANCODANIEL.SALDO_ANT (COD_TRANSACCION,NUM_CUENTA,TIPO_TRANSACCION,MONTO,MONTO_INICIAL,MONTO_FINAL,FECHA_TRANSACCION) values ('REG6','CLT1','DEPOSITO','2000','2000','4000',to_date('11/16/16','MM/DD/RR'));
Insert into BANCODANIEL.SALDO_ANT (COD_TRANSACCION,NUM_CUENTA,TIPO_TRANSACCION,MONTO,MONTO_INICIAL,MONTO_FINAL,FECHA_TRANSACCION) values ('REG12','CLT1','DEPOSITO','2000','6000','8000',to_date('11/16/16','MM/DD/RR'));
Insert into BANCODANIEL.SALDO_ANT (COD_TRANSACCION,NUM_CUENTA,TIPO_TRANSACCION,MONTO,MONTO_INICIAL,MONTO_FINAL,FECHA_TRANSACCION) values ('REG52','CLT2','DEPOSITO','100','9000','9100',to_date('11/28/16','MM/DD/RR'));
Insert into BANCODANIEL.SALDO_ANT (COD_TRANSACCION,NUM_CUENTA,TIPO_TRANSACCION,MONTO,MONTO_INICIAL,MONTO_FINAL,FECHA_TRANSACCION) values ('REG53','CLT1','GIRO','100','40550','40450',to_date('11/28/16','MM/DD/RR'));
REM INSERTING into BANCODANIEL.TRASPASO
SET DEFINE OFF;
--------------------------------------------------------
--  Constraints for Table DEPOSITO
--------------------------------------------------------

  ALTER TABLE "BANCODANIEL"."DEPOSITO" ADD PRIMARY KEY ("COD_DEPOSITO")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "BANCO_FINAL"  ENABLE;
--------------------------------------------------------
--  Constraints for Table SALDO_ANT
--------------------------------------------------------

  ALTER TABLE "BANCODANIEL"."SALDO_ANT" ADD PRIMARY KEY ("COD_TRANSACCION")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "BANCO_FINAL"  ENABLE;
--------------------------------------------------------
--  Constraints for Table CLIENTE
--------------------------------------------------------

  ALTER TABLE "BANCODANIEL"."CLIENTE" ADD PRIMARY KEY ("RUT_CLT")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "BANCO_FINAL"  ENABLE;
--------------------------------------------------------
--  Constraints for Table CUENTA_CLT
--------------------------------------------------------

  ALTER TABLE "BANCODANIEL"."CUENTA_CLT" ADD PRIMARY KEY ("NUM_CUENTA")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "BANCO_FINAL"  ENABLE;
--------------------------------------------------------
--  Constraints for Table TRASPASO
--------------------------------------------------------

  ALTER TABLE "BANCODANIEL"."TRASPASO" ADD PRIMARY KEY ("COD_TRASPASO")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "BANCO_FINAL"  ENABLE;
--------------------------------------------------------
--  Constraints for Table GIRO
--------------------------------------------------------

  ALTER TABLE "BANCODANIEL"."GIRO" ADD PRIMARY KEY ("COD_GIRO")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "BANCO_FINAL"  ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table CUENTA_CLT
--------------------------------------------------------

  ALTER TABLE "BANCODANIEL"."CUENTA_CLT" ADD FOREIGN KEY ("RUT_CLIENTE")
	  REFERENCES "BANCODANIEL"."CLIENTE" ("RUT_CLT") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table DEPOSITO
--------------------------------------------------------

  ALTER TABLE "BANCODANIEL"."DEPOSITO" ADD FOREIGN KEY ("NUM_CUENTA")
	  REFERENCES "BANCODANIEL"."CUENTA_CLT" ("NUM_CUENTA") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table GIRO
--------------------------------------------------------

  ALTER TABLE "BANCODANIEL"."GIRO" ADD FOREIGN KEY ("NUM_CUENTA")
	  REFERENCES "BANCODANIEL"."CUENTA_CLT" ("NUM_CUENTA") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table SALDO_ANT
--------------------------------------------------------

  ALTER TABLE "BANCODANIEL"."SALDO_ANT" ADD FOREIGN KEY ("NUM_CUENTA")
	  REFERENCES "BANCODANIEL"."CUENTA_CLT" ("NUM_CUENTA") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table TRASPASO
--------------------------------------------------------

  ALTER TABLE "BANCODANIEL"."TRASPASO" ADD FOREIGN KEY ("NUM_CUENTA_ORIGEN")
	  REFERENCES "BANCODANIEL"."CUENTA_CLT" ("NUM_CUENTA") ENABLE;
  ALTER TABLE "BANCODANIEL"."TRASPASO" ADD FOREIGN KEY ("NUM_CUENTA_DESTINO")
	  REFERENCES "BANCODANIEL"."CUENTA_CLT" ("NUM_CUENTA") ENABLE;
--------------------------------------------------------
--  DDL for Package BD_MANTENCION
--------------------------------------------------------

  CREATE OR REPLACE PACKAGE "BANCODANIEL"."BD_MANTENCION" AS

	-- DECLARAR PROCEDIMIENTOS
		PROCEDURE CREAR_CUENTA(RUT VARCHAR, NOM VARCHAR, APE VARCHAR, DIR VARCHAR, TEL VARCHAR, EMA VARCHAR, MON INT);
		PROCEDURE ELIMINAR_CUENTA(RUT VARCHAR);
		PROCEDURE MODIFICAR_DATOS_CLIENTE(RUT VARCHAR, NOM VARCHAR, APE VARCHAR, DIR VARCHAR, TEL VARCHAR, EMA VARCHAR);
		PROCEDURE REALIZAR_GIRO(NUME VARCHAR, MON INT);
		PROCEDURE REALIZAR_DEPOSITO(NUME VARCHAR, MON INT);
		PROCEDURE REALIZAR_TRASPASO(NUMEO VARCHAR, NUMED VARCHAR, MON INT);
		PROCEDURE CARTOLA(NUME VARCHAR);
		
END BD_MANTENCION;

/
--------------------------------------------------------
--  DDL for Package Body BD_MANTENCION
--------------------------------------------------------

  CREATE OR REPLACE PACKAGE BODY "BANCODANIEL"."BD_MANTENCION" AS

	-- CREAR CUENTA CLIENTE
		PROCEDURE CREAR_CUENTA(RUT VARCHAR, NOM VARCHAR, APE VARCHAR, DIR VARCHAR, TEL VARCHAR, EMA VARCHAR, MON INT) AS
		BEGIN
			INSERT INTO CLIENTE  VALUES(RUT, NOM, APE, DIR, TEL, EMA);
		   INSERT INTO CUENTA_CLT VALUES('CLT' || CUENTACLT.NEXTVAL, RUT, MON);
			DBMS_OUTPUT.PUT_LINE('=========================');
			DBMS_OUTPUT.PUT_LINE('La cuenta se ha creado con exito');
			DBMS_OUTPUT.PUT_LINE('=========================');
		END CREAR_CUENTA;
	
	-- ELIMINAR CUENTA CLIENTE
		PROCEDURE ELIMINAR_CUENTA(RUT VARCHAR) AS
		NUME_CUENTA VARCHAR2(30);
		BEGIN
		SELECT NUM_CUENTA INTO NUME_CUENTA FROM CLIENTE CLT, CUENTA_CLT CUE WHERE CLT.RUT_CLT=RUT AND CLT.RUT_CLT=CUE.RUT_CLIENTE;
		
		DELETE FROM SALDO_ANT WHERE NUM_CUENTA=NUME_CUENTA;
		DELETE FROM DEPOSITO WHERE NUM_CUENTA=NUME_CUENTA;
		DELETE FROM GIRO WHERE NUM_CUENTA=NUME_CUENTA;
		DELETE FROM CUENTA_CLT WHERE NUM_CUENTA=NUME_CUENTA;
		DELETE FROM CLIENTE WHERE RUT_CLT=RUT;
			DBMS_OUTPUT.PUT_LINE('=========================');
			DBMS_OUTPUT.PUT_LINE('La cuenta se ha eliminado con exito');
			DBMS_OUTPUT.PUT_LINE('=========================');
		END ELIMINAR_CUENTA;

	-- MODIFICAR DATOS CLIENTE
		PROCEDURE MODIFICAR_DATOS_CLIENTE(RUT VARCHAR, NOM VARCHAR, APE VARCHAR, DIR VARCHAR, TEL VARCHAR, EMA VARCHAR) AS
		BEGIN
			UPDATE CLIENTE SET NOMBRE=NOM, APELLIDO=APE, DIRECCION=DIR, TELEFONO=TEL, EMAIL=EMA WHERE RUT_CLT=RUT;
			DBMS_OUTPUT.PUT_LINE('===========================');
			DBMS_OUTPUT.PUT_LINE('La cuenta se ha actualizado con exito');
			DBMS_OUTPUT.PUT_LINE('===========================');			
		END MODIFICAR_DATOS_CLIENTE;
		
	-- REALIZAR GIRO
		PROCEDURE REALIZAR_GIRO(NUME VARCHAR, MON INT) AS 
			SALDO_INI INT;
			SALDO_FIN INT;
		BEGIN
			SELECT MONTO INTO SALDO_INI FROM CUENTA_CLT WHERE NUM_CUENTA=NUME;
				IF (SALDO_INI < MON) THEN
					DBMS_OUTPUT.PUT_LINE('==================== ERROR =======================');			
					DBMS_OUTPUT.PUT_LINE('NO SE PUEDE RETIRAR UN MONTO MAYOR AL SALDO DE SU CUENTA');
					DBMS_OUTPUT.PUT_LINE('=================================================');			
				ELSE
					INSERT INTO GIRO VALUES('GIR' || GIROCLT.NEXTVAL, NUME, MON, SYSDATE);
					SALDO_FIN := SALDO_INI - MON;
					UPDATE CUENTA_CLT SET MONTO=SALDO_FIN WHERE NUM_CUENTA=NUME;
					INSERT INTO SALDO_ANT VALUES('REG' || SALDOCLT.NEXTVAL, NUME, 'GIRO', MON, SALDO_INI, SALDO_FIN, SYSDATE);	
					DBMS_OUTPUT.PUT_LINE('===========================');
					DBMS_OUTPUT.PUT_LINE('El giro se ha realizado con exito');
					DBMS_OUTPUT.PUT_LINE('===========================');						
				END IF;		
		END REALIZAR_GIRO;

	-- REALIZAR DEPOSITO 
		PROCEDURE REALIZAR_DEPOSITO(NUME VARCHAR, MON INT) AS
			SALDO_INI INT;
			SALDO_FIN INT;
		BEGIN
			SELECT MONTO INTO SALDO_INI FROM CUENTA_CLT WHERE NUM_CUENTA=NUME;
			INSERT INTO DEPOSITO  VALUES('DEP' || DEPOSITOCLT.NEXTVAL, NUME, MON, SYSDATE);
			SALDO_FIN := SALDO_INI + MON;
			UPDATE CUENTA_CLT SET MONTO=SALDO_FIN WHERE NUM_CUENTA=NUME;
			INSERT INTO SALDO_ANT  VALUES('REG' || SALDOCLT.NEXTVAL, NUME, 'DEPOSITO', MON, SALDO_INI, SALDO_FIN, SYSDATE);
			DBMS_OUTPUT.PUT_LINE('===========================');
			DBMS_OUTPUT.PUT_LINE('El deposito se ha realizado con exito');
			DBMS_OUTPUT.PUT_LINE('===========================');	
		END REALIZAR_DEPOSITO;
			--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------	
	-- REALIZAR TRASPASO	
		PROCEDURE REALIZAR_TRASPASO(NUMEO VARCHAR, NUMED VARCHAR, MON INT) AS
			SALDO_INI INT;
			SALDO_FIN INT;
      NUEVO_SALDO INT;
		BEGIN
			SELECT MONTO INTO SALDO_INI FROM CUENTA_CLT WHERE NUM_CUENTA=NUMEO;
      SELECT MONTO INTO NUEVO_SALDO FROM CUENTA_CLT WHERE NUM_CUENTA=NUMED;
      
			IF (SALDO_INI < MON) THEN
					DBMS_OUTPUT.PUT_LINE('==================== ERROR =======================');			
					DBMS_OUTPUT.PUT_LINE('NO SE PUEDE TRASPASAR UN MONTO MAYOR AL SALDO DE SU CUENTA');
					DBMS_OUTPUT.PUT_LINE('=================================================');			
      ELSE
					INSERT INTO TRASPASO VALUES('TRA' || TRASPASOCLT.NEXTVAL, NUMEO, NUMED, MON, SYSDATE);
					SALDO_FIN := SALDO_INI - MON;
          NUEVO_SALDO := NUEVO_SALDO + MON;
					UPDATE CUENTA_CLT SET MONTO=SALDO_FIN WHERE NUM_CUENTA=NUMEO;
					UPDATE CUENTA_CLT SET MONTO=NUEVO_SALDO WHERE NUM_CUENTA=NUMED;
					INSERT INTO SALDO_ANT VALUES('REG' || SALDOCLT.NEXTVAL, NUMEO, 'TRASPASO', MON, SALDO_INI, SALDO_FIN, SYSDATE);	
					DBMS_OUTPUT.PUT_LINE('===========================');
					DBMS_OUTPUT.PUT_LINE('El traspaso se ha realizado con exito');
					DBMS_OUTPUT.PUT_LINE('===========================');						
      END IF;	
		END;
		
	-- CARTOLA CLIENTE
		PROCEDURE CARTOLA(NUME VARCHAR) AS
		RUT VARCHAR2(10);
		NOM VARCHAR2(10);
		APE VARCHAR2(10);
		BEGIN
		SELECT RUT_CLIENTE INTO RUT FROM CUENTA_CLT WHERE NUM_CUENTA=NUME;
		SELECT NOMBRE INTO NOM FROM CLIENTE CLT, CUENTA_CLT CU WHERE CLT.RUT_CLT=CU.RUT_CLIENTE AND CU.NUM_CUENTA=NUME;
		SELECT APELLIDO INTO APE FROM CLIENTE CLT, CUENTA_CLT CU WHERE CLT.RUT_CLT=CU.RUT_CLIENTE AND CU.NUM_CUENTA=NUME;
		
		DBMS_OUTPUT.PUT_LINE('NUMERO DE CUENTA: ' || NUME);
		DBMS_OUTPUT.PUT_LINE('RUT DEL TITULAR DE LA CUENTA: ' || RUT);
		DBMS_OUTPUT.PUT_LINE('NOMBRE DEL TITULAR DE LA CUENTA: ' || NOM || ' ' || APE);
		DBMS_OUTPUT.PUT_LINE('------------------------------------------------------------------------------------------------------------------');
			FOR DATOS IN (SELECT * FROM SALDO_ANT WHERE NUM_CUENTA=NUME) LOOP
				DBMS_OUTPUT.PUT_LINE('CODIGO: ' || DATOS.COD_TRANSACCION);
				DBMS_OUTPUT.PUT_LINE('TRANSACCION: ' || DATOS.TIPO_TRANSACCION);
				DBMS_OUTPUT.PUT_LINE('SALDO INICIAL: ' || DATOS.MONTO_INICIAL);
				DBMS_OUTPUT.PUT_LINE('MONTO TRANSACCION: ' || DATOS.MONTO);
				DBMS_OUTPUT.PUT_LINE('SALDO FINAL: ' || DATOS.MONTO_FINAL);
				DBMS_OUTPUT.PUT_LINE('FECHA TRANSACCION: ' || DATOS.FECHA_TRANSACCION);
				DBMS_OUTPUT.PUT_LINE('---------------------------------------------------------------------------');
				DBMS_OUTPUT.PUT_LINE('');
			END LOOP;
		END;
END BD_MANTENCION;

/
--------------------------------------------------------
--  DDL for Procedure CARTOLA
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "BANCODANIEL"."CARTOLA" (NUME VARCHAR) AS
		RUT VARCHAR2(10);
		NOM VARCHAR2(10);
		APE VARCHAR2(10);
		BEGIN
		SELECT RUT_CLIENTE INTO RUT FROM CUENTA_CLT WHERE NUM_CUENTA=NUME;
		SELECT NOMBRE INTO NOM FROM CLIENTE CLT, CUENTA_CLT CU WHERE CLT.RUT_CLT=CU.RUT_CLIENTE AND CU.NUM_CUENTA=NUME;
		SELECT APELLIDO INTO APE FROM CLIENTE CLT, CUENTA_CLT CU WHERE CLT.RUT_CLT=CU.RUT_CLIENTE AND CU.NUM_CUENTA=NUME;
		
		DBMS_OUTPUT.PUT_LINE('NUMERO DE CUENTA: ' || NUME);
		DBMS_OUTPUT.PUT_LINE('RUT DEL TITULAR DE LA CUENTA: ' || RUT);
		DBMS_OUTPUT.PUT_LINE('NOMBRE DEL TITULAR DE LA CUENTA: ' || NOM || ' ' || APE);
		DBMS_OUTPUT.PUT_LINE('------------------------------------------------------------------------------------------------------------------');
			FOR DATOS IN (SELECT * FROM SALDO_ANT WHERE NUM_CUENTA=NUME) LOOP
				DBMS_OUTPUT.PUT_LINE('CODIGO: ' || DATOS.COD_TRANSACCION);
				DBMS_OUTPUT.PUT_LINE('TRANSACCION: ' || DATOS.TIPO_TRANSACCION);
				DBMS_OUTPUT.PUT_LINE('SALDO INICIAL: ' || DATOS.MONTO_INICIAL);
				DBMS_OUTPUT.PUT_LINE('MONTO TRANSACCION: ' || DATOS.MONTO);
				DBMS_OUTPUT.PUT_LINE('SALDO FINAL: ' || DATOS.MONTO_FINAL);
				DBMS_OUTPUT.PUT_LINE('FECHA TRANSACCION: ' || DATOS.FECHA_TRANSACCION);
				DBMS_OUTPUT.PUT_LINE('---------------------------------------------------------------------------');
				DBMS_OUTPUT.PUT_LINE('');
			END LOOP;
		END;

/
--------------------------------------------------------
--  DDL for Procedure CREAR_CUENTA
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "BANCODANIEL"."CREAR_CUENTA" (RUT VARCHAR, NOM VARCHAR, APE VARCHAR, DIR VARCHAR, TEL VARCHAR, EMA VARCHAR, MON INT) AS
		BEGIN
			INSERT INTO CLIENTE  VALUES(RUT, NOM, APE, DIR, TEL, EMA);
		   INSERT INTO CUENTA_CLT VALUES('CLT' || CUENTACLT.NEXTVAL, RUT, MON);
			DBMS_OUTPUT.PUT_LINE('=========================');
			DBMS_OUTPUT.PUT_LINE('La cuenta se ha creado con exito');
			DBMS_OUTPUT.PUT_LINE('=========================');
		END CREAR_CUENTA;

/
--------------------------------------------------------
--  DDL for Procedure ELIMINAR_CUENTA
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "BANCODANIEL"."ELIMINAR_CUENTA" (RUT VARCHAR) AS
		NUME_CUENTA VARCHAR2(30);
		BEGIN
		SELECT NUM_CUENTA INTO NUME_CUENTA FROM CLIENTE CLT, CUENTA_CLT CUE WHERE CLT.RUT_CLT=RUT AND CLT.RUT_CLT=CUE.RUT_CLIENTE;
		
		DELETE FROM SALDO_ANT WHERE NUM_CUENTA=NUME_CUENTA;
		DELETE FROM DEPOSITO WHERE NUM_CUENTA=NUME_CUENTA;
		DELETE FROM GIRO WHERE NUM_CUENTA=NUME_CUENTA;
		DELETE FROM CUENTA_CLT WHERE NUM_CUENTA=NUME_CUENTA;
		DELETE FROM CLIENTE WHERE RUT_CLT=RUT;
			DBMS_OUTPUT.PUT_LINE('=========================');
			DBMS_OUTPUT.PUT_LINE('La cuenta se ha eliminado con exito');
			DBMS_OUTPUT.PUT_LINE('=========================');
		END ELIMINAR_CUENTA;

/
--------------------------------------------------------
--  DDL for Procedure MODIFICAR_DATOS_CLIENTE
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "BANCODANIEL"."MODIFICAR_DATOS_CLIENTE" (RUT VARCHAR, NOM VARCHAR, APE VARCHAR, DIR VARCHAR, TEL VARCHAR, EMA VARCHAR) AS
		BEGIN
			UPDATE CLIENTE SET NOMBRE=NOM, APELLIDO=APE, DIRECCION=DIR, TELEFONO=TEL, EMAIL=EMA WHERE RUT_CLT=RUT;
			DBMS_OUTPUT.PUT_LINE('===========================');
			DBMS_OUTPUT.PUT_LINE('La cuenta se ha actualizado con exito');
			DBMS_OUTPUT.PUT_LINE('===========================');			
		END MODIFICAR_DATOS_CLIENTE;

/
--------------------------------------------------------
--  DDL for Procedure REALIZAR_DEPOSITO
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "BANCODANIEL"."REALIZAR_DEPOSITO" (NUME VARCHAR, MON INT) AS
			SALDO_INI INT;
			SALDO_FIN INT;
		BEGIN
			SELECT MONTO INTO SALDO_INI FROM CUENTA_CLT WHERE NUM_CUENTA=NUME;
			INSERT INTO DEPOSITO  VALUES('DEP' || DEPOSITOCLT.NEXTVAL, NUME, MON, SYSDATE);
			SALDO_FIN := SALDO_INI + MON;
			UPDATE CUENTA_CLT SET MONTO=SALDO_FIN WHERE NUM_CUENTA=NUME;
			INSERT INTO SALDO_ANT  VALUES('REG' || SALDOCLT.NEXTVAL, NUME, 'DEPOSITO', MON, SALDO_INI, SALDO_FIN, SYSDATE);
			DBMS_OUTPUT.PUT_LINE('===========================');
			DBMS_OUTPUT.PUT_LINE('El deposito se ha realizado con exito');
			DBMS_OUTPUT.PUT_LINE('===========================');	
		END REALIZAR_DEPOSITO;

/
--------------------------------------------------------
--  DDL for Procedure REALIZAR_GIRO
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "BANCODANIEL"."REALIZAR_GIRO" (NUME VARCHAR, MON INT) AS 
			SALDO_INI INT;
			SALDO_FIN INT;
		BEGIN
			SELECT MONTO INTO SALDO_INI FROM CUENTA_CLT WHERE NUM_CUENTA=NUME;
				IF (SALDO_INI < MON) THEN
					DBMS_OUTPUT.PUT_LINE('==================== ERROR =======================');			
					DBMS_OUTPUT.PUT_LINE('NO SE PUEDE RETIRAR UN MONTO MAYOR AL SALDO DE SU CUENTA');
					DBMS_OUTPUT.PUT_LINE('=================================================');			
				ELSE
					INSERT INTO GIRO VALUES('GIR' || GIROCLT.NEXTVAL, NUME, MON, SYSDATE);
					SALDO_FIN := SALDO_INI - MON;
					UPDATE CUENTA_CLT SET MONTO=SALDO_FIN WHERE NUM_CUENTA=NUME;
					INSERT INTO SALDO_ANT VALUES('REG' || SALDOCLT.NEXTVAL, NUME, 'GIRO', MON, SALDO_INI, SALDO_FIN, SYSDATE);	
					DBMS_OUTPUT.PUT_LINE('===========================');
					DBMS_OUTPUT.PUT_LINE('El giro se ha realizado con exito');
					DBMS_OUTPUT.PUT_LINE('===========================');						
				END IF;		
		END REALIZAR_GIRO;

/
--------------------------------------------------------
--  DDL for Procedure REALIZAR_TRASPASO
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "BANCODANIEL"."REALIZAR_TRASPASO" (NUMEO VARCHAR, NUMED VARCHAR, MON INT) AS
			SALDO_INI INT;
			SALDO_FIN INT;
      NUEVO_SALDO INT;
		BEGIN
			SELECT MONTO INTO SALDO_INI FROM CUENTA_CLT WHERE NUM_CUENTA=NUMEO;
      SELECT MONTO INTO NUEVO_SALDO FROM CUENTA_CLT WHERE NUM_CUENTA=NUMED;
      
			IF (SALDO_INI < MON) THEN
					DBMS_OUTPUT.PUT_LINE('==================== ERROR =======================');			
					DBMS_OUTPUT.PUT_LINE('NO SE PUEDE TRASPASAR UN MONTO MAYOR AL SALDO DE SU CUENTA');
					DBMS_OUTPUT.PUT_LINE('=================================================');			
      ELSE
					INSERT INTO TRASPASO VALUES('TRA' || TRASPASOCLT.NEXTVAL, NUMEO, NUMED, MON, SYSDATE);
					SALDO_FIN := SALDO_INI - MON;
          NUEVO_SALDO := NUEVO_SALDO + MON;
					UPDATE CUENTA_CLT SET MONTO=SALDO_FIN WHERE NUM_CUENTA=NUMEO;
					UPDATE CUENTA_CLT SET MONTO=NUEVO_SALDO WHERE NUM_CUENTA=NUMED;
					INSERT INTO SALDO_ANT VALUES('REG' || SALDOCLT.NEXTVAL, NUMEO, 'TRASPASO', MON, SALDO_INI, SALDO_FIN, SYSDATE);	
					DBMS_OUTPUT.PUT_LINE('===========================');
					DBMS_OUTPUT.PUT_LINE('El traspaso se ha realizado con exito');
					DBMS_OUTPUT.PUT_LINE('===========================');						
      END IF;	
		END;

/